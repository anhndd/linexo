// Generated by Dagger (https://google.github.io/dagger).
package vn.edu.hcmut.linexo.presentation.di;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import vn.edu.hcmut.linexo.data.cache.CacheSource;

public final class AppModule_ProvideCacheSourceFactory implements Factory<CacheSource> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideCacheSourceFactory(AppModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public CacheSource get() {
    return provideInstance(module, contextProvider);
  }

  public static CacheSource provideInstance(AppModule module, Provider<Context> contextProvider) {
    return proxyProvideCacheSource(module, contextProvider.get());
  }

  public static AppModule_ProvideCacheSourceFactory create(
      AppModule module, Provider<Context> contextProvider) {
    return new AppModule_ProvideCacheSourceFactory(module, contextProvider);
  }

  public static CacheSource proxyProvideCacheSource(AppModule instance, Context context) {
    return Preconditions.checkNotNull(
        instance.provideCacheSource(context),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
