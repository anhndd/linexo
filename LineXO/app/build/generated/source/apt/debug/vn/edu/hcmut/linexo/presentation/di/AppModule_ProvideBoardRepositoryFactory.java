// Generated by Dagger (https://google.github.io/dagger).
package vn.edu.hcmut.linexo.presentation.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import vn.edu.hcmut.linexo.data.network.NetworkSource;
import vn.edu.hcmut.linexo.data.repository.BoardRepository;

public final class AppModule_ProvideBoardRepositoryFactory implements Factory<BoardRepository> {
  private final AppModule module;

  private final Provider<NetworkSource> networkSourceProvider;

  public AppModule_ProvideBoardRepositoryFactory(
      AppModule module, Provider<NetworkSource> networkSourceProvider) {
    this.module = module;
    this.networkSourceProvider = networkSourceProvider;
  }

  @Override
  public BoardRepository get() {
    return provideInstance(module, networkSourceProvider);
  }

  public static BoardRepository provideInstance(
      AppModule module, Provider<NetworkSource> networkSourceProvider) {
    return proxyProvideBoardRepository(module, networkSourceProvider.get());
  }

  public static AppModule_ProvideBoardRepositoryFactory create(
      AppModule module, Provider<NetworkSource> networkSourceProvider) {
    return new AppModule_ProvideBoardRepositoryFactory(module, networkSourceProvider);
  }

  public static BoardRepository proxyProvideBoardRepository(
      AppModule instance, NetworkSource networkSource) {
    return Preconditions.checkNotNull(
        instance.provideBoardRepository(networkSource),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
