package vn.edu.hcmut.linexo.data.local;

import java.util.ArrayList;
import java.util.List;

import io.reactivex.Single;
import vn.edu.hcmut.linexo.presentation.model.Board;

public class PaperDB implements LocalSource {

    public PaperDB() {
    }

    @Override
    public Single<List<Board>> loadBoard() {
        return Single.create(emitter -> {
            List<Board> boards = new ArrayList<>();
            //1
            boards.add(new Board(new byte[][]{
                    {0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0}, // 1
                    {0,0,0,0,0,0,0,0,3,4,3,0,0,0,0,0,0,0,0}, // 2
                    {0,0,0,0,0,0,0,3,0,1,0,3,0,0,0,0,0,0,0}, // 3
                    {0,0,0,0,0,0,3,4,1,4,1,4,3,0,0,0,0,0,0}, // 4
                    {0,0,0,0,0,3,0,1,0,1,0,1,0,3,0,0,0,0,0}, // 5
                    {0,0,0,0,3,4,1,4,1,4,1,4,1,4,3,0,0,0,0}, // 6
                    {0,0,0,3,0,1,0,1,0,1,0,1,0,1,0,3,0,0,0}, // 7
                    {0,0,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,0,0}, // 8
                    {0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0}, // 9
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 10
                    {3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3}, // 11
            },0,0,25));
            //2
            boards.add(new Board(new byte[][]{
                    {0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0}, // 1
                    {0,0,0,0,0,0,0,0,3,4,3,0,0,0,0,0,0,0,0}, // 2
                    {0,0,0,0,0,0,0,3,0,1,0,3,0,0,0,0,0,0,0}, // 3
                    {0,0,0,0,0,0,3,4,1,4,1,4,3,0,0,0,0,0,0}, // 4
                    {0,0,0,0,0,3,0,1,0,1,0,1,0,3,0,0,0,0,0}, // 5
                    {0,0,0,0,3,4,1,4,1,4,1,4,1,4,3,0,0,0,0}, // 6
                    {0,0,0,3,0,1,0,1,0,1,0,1,0,1,0,3,0,0,0}, // 7
                    {0,0,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,0,0}, // 8
                    {0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0}, // 9
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 10
                    {3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3}, // 11
            },0,0,25));
            //3
            boards.add(new Board(new byte[][]{
                    {0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0}, // 1
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 2
                    {0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0}, // 3
                    {1,4,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,1}, // 4
                    {0,1,0,3,0,1,0,1,0,1,0,1,0,1,0,3,0,1,0}, // 5
                    {1,4,1,4,3,4,1,4,1,4,1,4,1,4,3,4,1,4,1}, // 6
                    {0,1,0,3,0,1,0,1,0,1,0,1,0,1,0,3,0,1,0}, // 7
                    {1,4,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,1}, // 8
                    {0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0}, // 9
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 10
                    {0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0}, // 11
            },0,0,37));
            //4
            boards.add(new Board(new byte[][]{
                    {0,3,0,3,0,3,0,1,0,1,0,1,0,3,0,3,0,3,0}, // 1
                    {3,4,1,4,1,4,3,4,1,4,1,4,3,4,1,4,1,4,3}, // 2
                    {0,1,0,1,0,1,0,3,0,1,0,3,0,1,0,1,0,1,0}, // 3
                    {3,4,1,4,1,4,1,4,3,4,3,4,1,4,1,4,1,4,3}, // 4
                    {0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,1,0,1,0}, // 5
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 6
                    {0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0}, // 7
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 8
                    {0,1,0,1,0,3,0,1,0,1,0,1,0,3,0,1,0,1,0}, // 9
                    {3,4,1,4,3,4,3,4,1,4,1,4,3,4,3,4,1,4,3}, // 10
                    {0,3,0,3,0,1,0,3,0,3,0,3,0,1,0,3,0,3,0}, // 11
            },0,0,39));
            //5
            boards.add(new Board(new byte[][]{
                    {0,3,0,3,0,1,0,3,0,3,0,3,0,1,0,3,0,3,0}, // 1
                    {3,4,1,4,3,4,3,4,1,4,1,4,3,4,3,4,1,4,3}, // 2
                    {0,1,0,1,0,3,0,1,0,1,0,1,0,3,0,1,0,1,0}, // 3
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 4
                    {0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0}, // 5
                    {1,4,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,1}, // 6
                    {0,3,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0}, // 7
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 8
                    {0,1,0,1,0,3,0,1,0,1,0,1,0,3,0,1,0,1,0}, // 9
                    {3,4,1,4,3,4,3,4,1,4,1,4,3,4,3,4,1,4,3}, // 10
                    {0,3,0,3,0,1,0,3,0,3,0,3,0,1,0,3,0,3,0}, // 11
            },0,0,39));
            //6
            boards.add(new Board(new byte[][]{
                    {0,1,0,1,0,1,0,3,0,3,0,3,0,1,0,1,0,1,0}, // 1
                    {1,4,1,4,1,4,3,4,1,4,1,4,3,4,1,4,1,4,1}, // 2
                    {0,3,0,3,0,3,0,1,0,1,0,1,0,3,0,3,0,3,0}, // 3
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 4
                    {0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0}, // 5
                    {3,4,0,0,0,4,1,4,0,0,0,4,1,4,0,0,0,4,3}, // 6
                    {0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0}, // 7
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 8
                    {0,3,0,3,0,3,0,1,0,1,0,1,0,3,0,3,0,3,0}, // 9
                    {1,4,1,4,1,4,3,4,1,4,1,4,3,4,1,4,1,4,1}, // 10
                    {0,1,0,1,0,1,0,3,0,3,0,3,0,1,0,1,0,1,0}, // 11
            },0,0,30));
            //7
            boards.add(new Board(new byte[][]{
                    {0,1,0,1,0,3,0,3,0,3,0,3,0,3,0,1,0,1,0}, // 1
                    {1,4,1,4,3,4,1,4,1,4,1,4,1,4,3,4,1,4,1}, // 2
                    {0,1,0,3,0,1,0,1,0,1,0,1,0,1,0,3,0,1,0}, // 3
                    {1,4,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,1}, // 4
                    {0,3,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,3,0}, // 5
                    {3,4,1,4,1,4,1,4,0,0,0,4,1,4,1,4,1,4,3}, // 6
                    {0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0}, // 7
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 8
                    {0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,1,0,1,0}, // 9
                    {3,4,1,4,1,4,1,4,3,4,3,4,1,4,1,4,1,4,3}, // 10
                    {0,3,0,3,0,3,0,3,0,1,0,3,0,3,0,3,0,3,0}, // 11
            },0,0,37));
            //8
            boards.add(new Board(new byte[][]{
                    {0,3,0,3,0,3,0,1,0,1,0,3,0,3,0,3,0,3,0}, // 1
                    {3,4,1,4,1,4,3,4,1,4,3,4,1,4,1,4,1,4,3}, // 2
                    {0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,1,0,1,0}, // 3
                    {3,4,1,4,1,4,3,4,3,4,1,4,1,4,1,4,1,4,3}, // 4
                    {0,3,0,1,0,1,0,3,0,1,0,1,0,1,0,1,0,3,0}, // 5
                    {1,4,3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,1}, // 6
                    {0,3,0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,3,0}, // 7
                    {3,4,1,4,1,4,1,4,1,4,3,4,3,4,1,4,1,4,3}, // 8
                    {0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,1,0,1,0}, // 9
                    {3,4,1,4,1,4,1,4,3,4,1,4,3,4,1,4,1,4,3}, // 10
                    {0,3,0,3,0,3,0,3,0,1,0,1,0,3,0,3,0,3,0}, // 11
            },0,0,37));
            //9
            boards.add(new Board(new byte[][]{
                    {0,3,0,3,0,3,0,3,0,1,0,1,0,3,0,3,0,3,0}, // 1
                    {3,4,1,4,1,4,1,4,3,4,1,4,3,4,1,4,1,4,3}, // 2
                    {0,1,0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,3,0}, // 3
                    {3,4,1,4,1,4,1,4,3,4,3,4,1,4,1,4,3,4,1}, // 4
                    {0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,3,0,1,0}, // 5
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,1,4,1}, // 6
                    {0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,3,0,1,0}, // 7
                    {3,4,1,4,1,4,1,4,3,4,3,4,1,4,1,4,3,4,1}, // 8
                    {0,1,0,1,0,1,0,1,0,1,0,3,0,1,0,1,0,3,0}, // 9
                    {3,4,1,4,1,4,1,4,3,4,1,4,3,4,1,4,1,4,3}, // 10
                    {0,3,0,3,0,3,0,3,0,1,0,1,0,3,0,3,0,3,0}, // 11
            },0,0,35));
            //10
            boards.add(new Board(new byte[][]{
                    {0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0}, // 1
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 2
                    {0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0}, // 3
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 4
                    {0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0}, // 5
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 6
                    {0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0}, // 7
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 8
                    {0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0}, // 9
                    {3,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3}, // 10
                    {0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0}, // 11
            },0,0,45));

            emitter.onSuccess(boards);
        });
    }
}
